Assignment 1 (Done in pairs)

Sreemanti Dey (2020CS10393) and Aryan Dua (2020CS50475)

Algorithm : The algorithm works on the idea of iterative deepening but in the context of local search. We maintain a variable depth that indicates at most how many letters we shall change simultaneously while correcting a word. Thus, at each iteration, we keep increasing the number of letters to be checked simultaneously. At depth = 1, we change one letter and see what is the maximum accuracy achievable by this (by computing the max decrease in the cost function) and update the best state accordingly, then at depth = 2, we maintain a cartesian product of 2 letters that can be changed simultaneously and we see what is maximum accuracy achievable by this and so on, till timeout happens. We take the depth based on length of word since smaller words will have less number of mistakes while larger words are more prone to more number of mistakes. Thus overall, we have this mix of local search and dynamic programming approaches that help us form the algorithm we have made.

State : string under consideration

Goal : string which has the least cost (measured using the cost function)

Operator : At each step based on depth (which is number of characters to be changed simultaneously to get the maximum reduction in cost), we move to the next state, which gives the maximum reduction in cost.
